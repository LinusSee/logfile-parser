{
	"info": {
		"_postman_id": "bcb7a5b2-c3a4-48b1-b0f2-5c4e03d61205",
		"name": "parser-rest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "elementary-parsers",
			"item": [
				{
					"name": "Get all elementary parsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/parsers/building-blocks/complex",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"building-blocks",
								"complex"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all elementary parser IDs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/parsers/building-blocks/complex/ids",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"building-blocks",
								"complex",
								"ids"
							]
						},
						"description": "Retrieves the IDs and names for all existing elementary parsers."
					},
					"response": []
				},
				{
					"name": "Create applied elementary parser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"type\": \"characters\",\r\n    \"name\": \"postmanParser\",\r\n\t\"value\": \"postman\",\r\n    \"options\": {\r\n        \"keepResult\": true\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/parsers/building-blocks/complex",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"building-blocks",
								"complex"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply parser by name to target string",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/parsers/building-blocks/complex/apply/Time Parser?target=11-30",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"building-blocks",
								"complex",
								"apply",
								"Time Parser"
							],
							"query": [
								{
									"key": "target",
									"value": "11-30"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply elementary parser to target string",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"target\": \"2020:13:11\",\r\n    \"parser\": {\r\n        \"pattern\": \"YYYY:DD:MM\",\r\n        \"type\": \"date\",\r\n        \"name\": \"standardDate\",\r\n        \"options\": {\r\n            \"keepResult\": true\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/parsers/building-blocks/complex/apply",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"building-blocks",
								"complex",
								"apply"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "logfile-parsers",
			"item": [
				{
					"name": "Get all logfile parser names",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/parsers/logfile/",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"logfile",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create logfile parser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"DateTimeParser\",\r\n    \"parsers\": [\r\n            {\r\n                \"name\": \"logDate\",\r\n                \"parser\": {\r\n                    \"type\":\"date\",\r\n                    \"pattern\":\"YYYY-DD-MM\",\r\n                    \"name\":\"weirdDate\",\r\n                    \"options\": {\r\n                        \"keepResult\": true\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                \"name\": \"logTime\",\r\n                \"parser\": {\r\n                    \"type\":\"time\",\r\n                    \"pattern\":\"HH:MM\",\r\n                    \"name\":\"clockTime\",\r\n                    \"options\": {\r\n                        \"keepResult\": true\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/parsers/logfile/",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"logfile",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply logfile parser by name to target string",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/parsers/logfile/apply/DateTimeParser?target=2000-10-1111:30",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"logfile",
								"apply",
								"DateTimeParser"
							],
							"query": [
								{
									"key": "target",
									"value": "2000-10-1111:30"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply logfile parser to target string",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"target\": \"2000-10-1111-30\",\r\n    \"parser\": {\r\n        \"name\": \"NewParser\",\r\n        \"parsers\": [\r\n            {\r\n                \"name\": \"LogDate\",\r\n                \"parser\": {\r\n                    \"options\": {\r\n                        \"keepResult\": true\r\n                    },\r\n                    \"type\": \"date\",\r\n                    \"pattern\": \"yyyy-mm-dd\",\r\n                    \"name\": \"easySortDate\"\r\n                }\r\n            },\r\n            {\r\n                \"name\": \"LogTime\",\r\n                \"parser\": {\r\n                    \"options\": {\r\n                        \"keepResult\": true\r\n                    },\r\n                    \"type\": \"time\",\r\n                    \"pattern\": \"hh-mm\",\r\n                    \"name\": \"Time Parser\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/parsers/logfile/apply",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"logfile",
								"apply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply logfile parser to file",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data; boundary=foo_bar_baz",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "--foo_bar_baz\r\nContent-Disposition: form-data; name=\"name\"\r\n\r\nLoglevelDateTime\r\n--foo_bar_baz\r\nContent-Disposition: form-data; name=\"logfile\"; filename=\"mylogfile.log\"\r\nContent-Type: text/plain\r\n\r\nDEBUG 2021-02-20 11:31\r\nINFO 2021-02-21 13:14\r\nINFO 2021-02-21 19:48\r\nERROR 2021-02-22 20:31\r\n--foo_bar_baz--"
						},
						"url": {
							"raw": "localhost:8080/api/parsers/logfile/apply/file",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"parsers",
								"logfile",
								"apply",
								"file"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}